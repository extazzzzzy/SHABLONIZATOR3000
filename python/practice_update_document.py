from docxtpl import DocxTemplate
import sys
import pymorphy2

morph = pymorphy2.MorphAnalyzer()

SRC_DOCUMENT = sys.argv[1]
PRACTICE_PLACE = sys.argv[2]
PRACTICE_PLACE_PRED = PRACTICE_PLACE
IS_PRACTICE_PLACE_PRED = False
PRACTICE_PLACE_PRED_SPLIT = PRACTICE_PLACE_PRED.split()
PRACTICE_PLACE_PRED_ARR = []
for i in PRACTICE_PLACE_PRED_SPLIT:
    if (IS_PRACTICE_PLACE_PRED == False):
        PRACTICE_PLACE_PRED_PARSE = morph.parse(i)[0]
        PRACTICE_PLACE_PRED_WORD = PRACTICE_PLACE_PRED_PARSE.inflect({'loct'}).word.capitalize()
        IS_PRACTICE_PLACE_PRED = True
    else:
        PRACTICE_PLACE_PRED_PARSE = morph.parse(i)[0]
        PRACTICE_PLACE_PRED_WORD = PRACTICE_PLACE_PRED_PARSE.inflect({'loct'}).word
    PRACTICE_PLACE_PRED_ARR.append(PRACTICE_PLACE_PRED_WORD)
PRACTICE_PLACE_PRED = ' '.join(PRACTICE_PLACE_PRED_ARR)
PRACTICE_PLACE_ADDRESS = sys.argv[3]
WORK_YEAR = sys.argv[4]
PRACTICE_DEADLINES = sys.argv[5]

doc = DocxTemplate(SRC_DOCUMENT)

context = {"PRACTICE_PLACE": PRACTICE_PLACE, "PRACTICE_PLACE_PRED": PRACTICE_PLACE_PRED, "PRACTICE_PLACE_ADDRESS": PRACTICE_PLACE_ADDRESS, "WORK_YEAR": WORK_YEAR,
"PRACTICE_DEADLINES": PRACTICE_DEADLINES,

    "STUDENT_QUALITIES": "{{STUDENT_QUALITIES}}", "PROBLEM_SOLVING_SPEED": "{{PROBLEM_SOLVING_SPEED}}", "WORK_AMOUNT": "{{WORK_AMOUNT}}",
           "REMARKS": "{{REMARKS}}", "STUDENT_ASSESSMENT": "{{STUDENT_ASSESSMENT}}"}

doc.render(context)
doc.save(SRC_DOCUMENT)